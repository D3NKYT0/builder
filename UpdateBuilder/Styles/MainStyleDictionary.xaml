<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:UpdateBuilder">
  <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
    <Setter Property="FontFamily" Value="./#Montserrat" />
  </Style>
  <ControlTemplate x:Key="UpNovaLinkStyle" TargetType="{x:Type Button}">
    <Grid Background="{TemplateBinding Background}" />
  </ControlTemplate>
  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource SystemColors.ControlTextBrushKey}" StrokeThickness="1" StrokeDashArray="1 2" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
  <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
  <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
  <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
  <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
  <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
  <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
  <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
  <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
  <Style x:Key="RegularButton" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
    <Setter Property="Foreground" Value="#FFCFCFCF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="FrameworkElement.Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="10" Background="#FF4684EB" BorderBrush="{x:Null}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.2" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                      <EasingColorKeyFrame KeyTime="0" Value="#FF1261E4" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.625" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="OldSplitter" TargetType="{x:Type GridSplitter}">
    <Setter Property="Background" Value="{DynamicResource SystemColors.WindowBrushKey}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
    <Setter Property="Foreground" Value="#FFCFCFCF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridSplitter}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition Width="5" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.Column="0" Fill="#FFFFFFFF" Margin="4,2,2,2" RadiusX="3" RadiusY="3" />
            <Rectangle Grid.Column="1" Fill="#FFFFFFFF" RadiusX="90" RadiusY="90" Height="5" />
            <Rectangle Grid.Column="2" Fill="#FFFFFFFF" Margin="2,2,4,2" RadiusX="3" RadiusY="3" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NewSplitter" TargetType="{x:Type GridSplitter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridSplitter}">
          <Grid>
            <Rectangle Grid.Column="0" Fill="{TemplateBinding Background}" RadiusX="3" RadiusY="3" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VS2012WindowStyleTitleBarButton" TargetType="{x:Type Button}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Border Name="PART_border" Background="#00FFFFFF" />
            <ContentPresenter />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_border" Property="Border.Background" Value="#FFF" />
              <Setter TargetName="PART_border" Property="UIElement.Opacity" Value="0.7" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">
    <Setter Property="Window.WindowStyle" Value="None" />
    <Setter Property="Window.AllowsTransparency" Value="True" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Window.ResizeMode" Value="CanResizeWithGrip" />
    <Setter Property="WindowChrome.WindowChrome">
      <Setter.Value>
        <WindowChrome NonClientFrameEdges="None" GlassFrameThickness="0" ResizeBorderThickness="7" CaptionHeight="32" />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Window}">
          <Border Name="PART_Container" Padding="7 7 7 5">
            <Grid>
              <Border Name="PART_Border" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="15">
                <DockPanel HorizontalAlignment="Stretch" Background="#00FFFFFF" VerticalAlignment="Stretch">
                  <ContentPresenter />
                </DockPanel>
              </Border>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Window.WindowState" Value="Normal">
              <Setter TargetName="PART_Border" Property="UIElement.Effect">
                <Setter.Value>
                  <DropShadowEffect Color="black" Opacity="0.5" BlurRadius="7" ShadowDepth="2" Direction="315" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Resources>
      <ResourceDictionary>
        <Style x:Key="{x:Type ResizeGrip}" TargetType="{x:Type ResizeGrip}">
          <Setter Property="WindowChrome.ResizeGripDirection" Value="BottomRight" />
        </Style>
      </ResourceDictionary>
    </Style.Resources>
  </Style>
  <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
  <Style x:Key="OptionMarkFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource SystemColors.ControlTextBrushKey}" StrokeThickness="1" StrokeDashArray="1 2" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
  <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
  <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
  <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
  <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
  <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
  <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
  <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
  <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
  <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
  <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
    <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
    <Setter Property="Foreground" Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid Name="templateRoot" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition />
              <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Border Name="checkBoxBorder" Height="24" Width="24" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="4" Background="#FFFFFFFF" BorderBrush="#5D878787">
              <Grid Name="markGrid">
                <Path Name="optionMark" Height="7" Width="10" Data="M8.49373,0.758435 C8.83831,0.413855 9.39698,0.413855 9.74156,0.758435 C10.0861,1.10302 10.0861,1.66169 9.74156,2.00627 L4.44745,7.30039 C4.10287,7.64497 3.54419,7.64497 3.19961,7.30039 L0.258435,4.35921 C-0.0861451,4.01463 -0.0861451,3.45596 0.258435,3.11138 C0.603015,2.7668 1.16169,2.7668 1.50627,3.11138 L3.82353,5.42863 L8.49373,0.758435" Fill="#4684EB" Margin="1" Opacity="0" />
                <Rectangle Name="indeterminateMark" Margin="2" Opacity="0" Fill="{StaticResource OptionMark.Static.Glyph}" />
              </Grid>
            </Border>
            <ContentPresenter Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="10,4,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.ColumnSpan="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="True">
              <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
              <Setter Property="Padding" Value="4,-1,0,0" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="checkBoxBorder" Property="Border.Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
              <Setter TargetName="checkBoxBorder" Property="Border.BorderBrush" Value="{StaticResource OptionMark.MouseOver.Border}" />
              <Setter TargetName="optionMark" Property="Shape.Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
              <Setter TargetName="indeterminateMark" Property="Shape.Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="checkBoxBorder" Property="Border.Background" Value="{StaticResource OptionMark.Disabled.Background}" />
              <Setter TargetName="checkBoxBorder" Property="Border.BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
              <Setter TargetName="optionMark" Property="Shape.Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
              <Setter TargetName="indeterminateMark" Property="Shape.Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="checkBoxBorder" Property="Border.Background" Value="{StaticResource OptionMark.Pressed.Background}" />
              <Setter TargetName="checkBoxBorder" Property="Border.BorderBrush" Value="{StaticResource OptionMark.Pressed.Border}" />
              <Setter TargetName="optionMark" Property="Shape.Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
              <Setter TargetName="indeterminateMark" Property="Shape.Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="1" />
              <Setter TargetName="indeterminateMark" Property="UIElement.Opacity" Value="0" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="{x:Null}">
              <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="0" />
              <Setter TargetName="indeterminateMark" Property="UIElement.Opacity" Value="1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="LangRadio" TargetType="{x:Type RadioButton}">
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="0:0:0.2" />
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.9" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed" />
          <VisualState x:Name="Disabled" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="CheckStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="0:0:0.2" />
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Checked" />
          <VisualState x:Name="Unchecked">
            <Storyboard>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.435" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Indeterminate" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border>
        <Rectangle Name="rectangle" Fill="{TemplateBinding Background}" />
      </Border>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="DropSelectFolderButton" TargetType="{x:Type Button}">
    <FrameworkTemplate.Resources>
      <ResourceDictionary>
        <Storyboard x:Key="OnDragOver1">
          <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
            <EasingColorKeyFrame KeyTime="0" Value="#FF4F8CF3" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle1">
            <EasingColorKeyFrame KeyTime="0" Value="#FF4F8CF3" />
          </ColorAnimationUsingKeyFrames>
        </Storyboard>
      </ResourceDictionary>
    </FrameworkTemplate.Resources>
    <Grid Background="#00FFFFFF">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="0:0:0.2" />
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                <EasingColorKeyFrame KeyTime="0" Value="#FF4F8CF3" />
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle1">
                <EasingColorKeyFrame KeyTime="0" Value="#FF4F8CF3" />
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed" />
          <VisualState x:Name="Disabled" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Rectangle Name="rectangle" Stroke="#FF94BCFF" StrokeThickness="1" StrokeDashArray="4 3" SnapsToDevicePixels="True" RadiusX="7" RadiusY="7" />
      <Rectangle Name="rectangle1" Fill="#FF94BCFF" VerticalAlignment="Center" Margin="15,0,0,0" Width="20" Height="20" HorizontalAlignment="Left">
        <UIElement.OpacityMask>
          <ImageBrush ImageSource="/UpdateBuilder/Resource/bigfolder.png" />
        </UIElement.OpacityMask>
      </Rectangle>
    </Grid>
    <ControlTemplate.Triggers>
      <EventTrigger RoutedEvent="UIElement.DragOver">
        <BeginStoryboard Storyboard="{StaticResource OnDragOver1}" />
      </EventTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025" />
  <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6" />
  <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC" />
  <Style x:Key="CornerProgressBarStyle" TargetType="{x:Type ProgressBar}">
    <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}" />
    <Setter Property="Background" Value="{StaticResource ProgressBar.Background}" />
    <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid Name="TemplateRoot">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Determinate" />
                <VisualState x:Name="Indeterminate">
                  <Storyboard RepeatBehavior="Forever">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                      <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                      <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                    </DoubleAnimationUsingKeyFrames>
                    <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                      <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                      <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                      <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                    </PointAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="10" />
            <Rectangle Name="PART_Track" />
            <Grid Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
              <Rectangle Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="10" RadiusY="10" />
              <Rectangle Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="10" RadiusY="10">
                <UIElement.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                  </TransformGroup>
                </UIElement.RenderTransform>
              </Rectangle>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ProgressBar.Orientation" Value="Vertical">
              <Setter TargetName="TemplateRoot" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="True">
              <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="CriticalCheckboxTempalte" TargetType="{x:Type CheckBox}">
    <Grid Name="grid">
      <Panel.Background>
        <ImageBrush ImageSource="/UpdateBuilder/Resource/critical.png" Stretch="UniformToFill" />
      </Panel.Background>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ToggleButton.IsChecked" Value="False">
        <Setter TargetName="grid" Property="Panel.Background">
          <Setter.Value>
            <ImageBrush ImageSource="/UpdateBuilder/Resource/critical_off.png" Stretch="UniformToFill" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="CheckHashCheckboxTempalte" TargetType="{x:Type CheckBox}">
    <Grid Name="grid">
      <Panel.Background>
        <ImageBrush ImageSource="/UpdateBuilder/Resource/checkhash_on.png" Stretch="UniformToFill" />
      </Panel.Background>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ToggleButton.IsChecked" Value="False">
        <Setter TargetName="grid" Property="Panel.Background">
          <Setter.Value>
            <ImageBrush ImageSource="/UpdateBuilder/Resource/checkhash_off.png" Stretch="UniformToFill" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="SyncButtonControlTemplate" TargetType="{x:Type Button}">
    <Grid Name="grid">
      <Border Name="border" BorderBrush="#0C000000" BorderThickness="1" CornerRadius="10">
        <UIElement.Effect>
          <DropShadowEffect ShadowDepth="1" />
        </UIElement.Effect>
      </Border>
      <Rectangle Margin="10">
        <Shape.Fill>
          <ImageBrush ImageSource="/UpdateBuilder/Resource/syncbutton.png" />
        </Shape.Fill>
      </Rectangle>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="grid" Property="UIElement.Opacity" Value="0.5" />
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter TargetName="border" Property="Border.BorderBrush" Value="#FF94BCFF" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>