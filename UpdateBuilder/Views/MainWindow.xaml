<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="UpdateBuilder.Views.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:viewModels="clr-namespace:UpdateBuilder.ViewModels" xmlns:items="clr-namespace:UpdateBuilder.ViewModels.Items" xmlns:controls="clr-namespace:UpdateBuilder.Controls" xmlns:utils="clr-namespace:UpdateBuilder.Utils" xmlns:views="clr-namespace:UpdateBuilder.Views" xmlns:models="clr-namespace:UpdateBuilder.Models" Title="L2JCore Builder" Height="472.818" Width="834" Background="#FFFFFFFF" MinHeight="600" MinWidth="820" WindowStartupLocation="CenterScreen" Style="{DynamicResource MainWindowStyle}" Icon="/icon.ico">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <HierarchicalDataTemplate x:Key="{DataTemplateKey {x:Type items:FolderItemViewModel}}" DataType="{x:Type items:FolderItemViewModel}" ItemsSource="{Binding Childrens}">
                <StackPanel Orientation="Horizontal">
                    <CheckBox Style="{DynamicResource CheckBoxStyle}" Template="{DynamicResource CriticalCheckboxTempalte}" Width="18" Height="14" IsChecked="{Binding QuickUpdate}" />
                    <CheckBox Margin="7,0,0,0" Style="{DynamicResource CheckBoxStyle}" Template="{DynamicResource CheckHashCheckboxTempalte}" Width="17" Height="18" IsChecked="{Binding CheckHash}" />
                    <TextBlock Margin="10,0,0,0" FontSize="14" Text="{Binding Name}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                  <DataTrigger Value="{x:Static models:ModifyType.New}" Binding="{Binding ModifyType}">
                    <Setter Property="Foreground" Value="#FF008000" />
                  </DataTrigger>
                  <DataTrigger Value="{x:Static models:ModifyType.Deleted}" Binding="{Binding ModifyType}">
                    <Setter Property="Foreground" Value="#FFFF0000" />
                  </DataTrigger>
                  <DataTrigger Value="{x:Static models:ModifyType.Modified}" Binding="{Binding ModifyType}">
                    <Setter Property="Foreground" Value="#FF0000FF" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
                    </TextBlock>
                </StackPanel>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate x:Key="{DataTemplateKey {x:Type items:FileItemViewModel}}" DataType="{x:Type items:FileItemViewModel}" ItemsSource="{Binding FileUpdates}">
                <StackPanel Orientation="Horizontal">
                    <CheckBox Style="{DynamicResource CheckBoxStyle}" Template="{DynamicResource CriticalCheckboxTempalte}" Width="18" Height="14" IsChecked="{Binding QuickUpdate}" />
                    <CheckBox Margin="7,0,0,0" Style="{DynamicResource CheckBoxStyle}" Template="{DynamicResource CheckHashCheckboxTempalte}" Width="17" Height="18" IsChecked="{Binding CheckHash}" />
                    <TextBlock Margin="10,0,0,0" FontSize="14" Text="{Binding Name}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                  <DataTrigger Value="{x:Static models:ModifyType.New}" Binding="{Binding ModifyType}">
                    <Setter Property="Foreground" Value="#FF008000" />
                  </DataTrigger>
                  <DataTrigger Value="{x:Static models:ModifyType.Deleted}" Binding="{Binding ModifyType}">
                    <Setter Property="Foreground" Value="#FFFF0000" />
                  </DataTrigger>
                  <DataTrigger Value="{x:Static models:ModifyType.Modified}" Binding="{Binding ModifyType}">
                    <Setter Property="Foreground" Value="#FF0000FF" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
                    </TextBlock>
                    <TextBlock Margin="5,0,0,0" FontSize="14" Text="{Binding Size}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                  <DataTrigger Value="false" Binding="{Binding ElementName=ShowSizeCheckbox, Path=IsChecked}">
                    <Setter Property="Visibility" Value="Collapsed" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
                    </TextBlock>
                    <TextBlock Margin="5,0,0,0" FontSize="14" Text="{Binding Hash}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                  <DataTrigger Value="false" Binding="{Binding ElementName=ShowHashCheckbox, Path=IsChecked}">
                    <Setter Property="Visibility" Value="Collapsed" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
                    </TextBlock>
                </StackPanel>
            </HierarchicalDataTemplate>
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <Grid>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Width="62.416" Margin="0,17.25,10,0">
            <Button Name="MinButton" VerticalAlignment="Top" Width="27.583" Height="26" Style="{StaticResource VS2012WindowStyleTitleBarButton}" WindowChrome.IsHitTestVisibleInChrome="True" Cursor="Hand" Click="MinButton_Click">
                <Grid MaxHeight="14" MaxWidth="13">
                    <Path StrokeThickness="1.5" Stretch="Fill" Data="M6,8 L8,8" Margin="0,12,0,0" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                </Grid>
            </Button>
            <Button Name="CloseButton" Grid.Column="4" VerticalAlignment="Top" Width="24.5" Height="26" Style="{StaticResource VS2012WindowStyleTitleBarButton}" WindowChrome.IsHitTestVisibleInChrome="True" Cursor="Hand" IsDefault="True" Click="CloseButton_Click">
                <Grid MaxHeight="13" MaxWidth="13">
                    <Path StrokeThickness="1.5" Stretch="UniformToFill" Data="M0,0 L8,8 M0,8 L8,0" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                </Grid>
            </Button>
        </StackPanel>
        <Grid Margin="20,12,30,40">
            <Grid.RowDefinitions>
                <RowDefinition Height="80" />
                <RowDefinition Height="20" />
                <RowDefinition Height="100" />
                <RowDefinition />
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>
            <Grid Name="HeaderPanel" Row="0">
                <StackPanel Orientation="Horizontal">
                    <Button Cursor="Hand" Width="170.75" Template="{DynamicResource UpNovaLinkStyle}" Margin="0,3.333,0,6.75" Command="{Binding GoToSiteCommand}">
                        <Control.Background>
                            <ImageBrush ImageSource="/UpdateBuilder/Resource/logoupnova.png" />
                        </Control.Background>
                    </Button>
                    <StackPanel Margin="16,22,0,0" Visibility="Collapsed">
                        <RadioButton Content="Ru" Template="{DynamicResource LangRadio}" Width="27" Height="21" Cursor="Hand" IsChecked="True">
                            <Control.Background>
                                <ImageBrush ImageSource="/UpdateBuilder/Resource/checkhash_on.png" />
                            </Control.Background>
                        </RadioButton>
                        <RadioButton Content="Eng" Width="27" Height="21" Margin="0,7" Template="{DynamicResource LangRadio}" Cursor="Hand">
                            <Control.Background>
                                <ImageBrush ImageSource="/UpdateBuilder/Resource/checkhash_off.png" />
                            </Control.Background>
                        </RadioButton>
                    </StackPanel>
                    <StackPanel Margin="25,20,0,0">
                        <CheckBox Name="ShowSizeCheckbox" Content="Mostrar o tamanho dos arquivos" IsChecked="True" FontSize="15" Style="{DynamicResource CheckBoxStyle}" FontFamily="Arial" />
                        <CheckBox Name="ShowHashCheckbox" Content="Mostrar as somas de verificação dos arquivos" IsChecked="True" FontSize="15" Margin="0,3" Style="{DynamicResource CheckBoxStyle}" />
                    </StackPanel>
                </StackPanel>
            </Grid>
            <Separator Grid.Row="1" Margin="10,0,0,0" Background="#6DA0A0A0" />
            <Grid Name="FilesPanel" Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="65*" />
                    <ColumnDefinition Width="10*" />
                    <ColumnDefinition Width="65*" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="01. Carregar arquivos de patch" VerticalAlignment="Center" Margin="10,11.6" FontSize="14" Height="16.8" />
                <TextBlock Grid.Column="2" Text="02. Onde vamos salvar o patch para o atualizador?" VerticalAlignment="Center" Margin="10,11.6" FontSize="14" Height="16.8" />
                <Grid Row="1" Column="0">
                    <Grid Margin="62,21,53,19">
                        <TextBlock Name="PatchPath" Foreground="#FF94BCFF" FontSize="14" TextTrimming="CharacterEllipsis" Text="{Binding PatchPath, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        <Rectangle Fill="#FF94BCFF" Margin="0,16,0,3.333" />
                        <FrameworkElement.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Value="" Binding="{Binding ElementName=PatchPath, Path=Text}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </FrameworkElement.Style>
                    </Grid>
                    <TextBlock Margin="62,11,30,5" FontSize="14" TextWrapping="Wrap">
            <Run Text="Arraste" FontWeight="SemiBold" Foreground="#FF4F8CF3" /> <Run Text="ou" Foreground="#FF80A9F0" /> <Run Text="clique aqui" FontWeight="SemiBold" Foreground="#FF4F8CF3" /> <Run Text="para selecionar a pasta com os arquivos do patch" Foreground="#FF80A9F0" /><FrameworkElement.Style><Style TargetType="{x:Type TextBlock}"><Setter Property="Visibility" Value="Hidden" /><Style.Triggers><DataTrigger Value="" Binding="{Binding ElementName=PatchPath, Path=Text}"><Setter Property="Visibility" Value="Visible" /></DataTrigger></Style.Triggers></Style></FrameworkElement.Style></TextBlock>
                    <Button Template="{DynamicResource DropSelectFolderButton}" Margin="10,5" AllowDrop="True" Cursor="Hand" Command="{Binding SetPatchPathCommand}" Drop="Button_Drop" />
                </Grid>
                <Grid Column="1" Row="1">
                    <Button Content="🔁" Template="{DynamicResource SyncButtonControlTemplate}" Width="44" Height="44" Cursor="Hand" Command="{Binding SyncCommand}" />
                </Grid>
                <Grid Row="1" Column="2">
                    <Grid Margin="62,21,53,19">
                        <TextBlock Name="OutPath" Foreground="#FF94BCFF" FontSize="14" TextTrimming="CharacterEllipsis" Text="{Binding OutPath, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        <Rectangle Fill="#FF94BCFF" Margin="0,16,0,3.333" />
                        <FrameworkElement.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Value="" Binding="{Binding ElementName=OutPath, Path=Text}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </FrameworkElement.Style>
                    </Grid>
                    <TextBlock Margin="62,11,21,5" FontSize="14" TextWrapping="Wrap">
            <Run Text="Arraste" FontWeight="SemiBold" Foreground="#FF4F8CF3" /> <Run Text="ou" Foreground="#FF80A9F0" /> <Run Text="Clique aqui" FontWeight="SemiBold" Foreground="#FF4F8CF3" /> <Run Text="para escolher" Foreground="#FF80A9F0" /> <Run Text="onde" FontWeight="SemiBold" Foreground="#FF4F8CF3" /> <Run Text="irá salvar" Foreground="#FF80A9F0" /> <Run Text="os arquivos compactados" FontWeight="SemiBold" Foreground="#FF4F8CF3" /><FrameworkElement.Style><Style TargetType="{x:Type TextBlock}"><Setter Property="Visibility" Value="Hidden" /><Style.Triggers><DataTrigger Value="" Binding="{Binding ElementName=OutPath, Path=Text}"><Setter Property="Visibility" Value="Visible" /></DataTrigger></Style.Triggers></Style></FrameworkElement.Style></TextBlock>
                    <Button Template="{DynamicResource DropSelectFolderButton}" Margin="10,5" AllowDrop="True" Cursor="Hand" Command="{Binding SetOutPathCommand}" Drop="ButtonOut_Drop" />
                </Grid>
            </Grid>
            <Grid Name="MainPanel" Row="3" Margin="8,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="371*" />
                </Grid.RowDefinitions>
                <Grid Row="0" Margin="20,15,20,10" Height="60">
                    <Grid Margin="20,0,0,0" HorizontalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Arquivos de atualização" TextAlignment="Center" VerticalAlignment="Center" FontSize="18" Margin="0,28.4,0,10" />
                            <Rectangle Fill="#FF4684EB" RadiusX="90" RadiusY="90" Width="22" Height="22" Margin="0,12,0,19" Visibility="Hidden" />
                        </StackPanel>
                    </Grid>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                        <TextBlock Text="Número de arquivos:" Foreground="#FF94BCFF" FontSize="14" />
                        <TextBlock Margin="5,0,0,0" Foreground="#FF4684EB" FontSize="14" Text="{Binding TotalCount}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                        <TextBlock Text="Tamanho do patch:" Foreground="#FF94BCFF" FontSize="14" />
                        <TextBlock Margin="5,0,0,0" Foreground="#FF4684EB" FontSize="14" Text="{Binding TotalSize}" />
                    </StackPanel>
                </Grid>
                <Grid Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200*" MinHeight="100" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="100*" />
                    </Grid.RowDefinitions>
                    <Border BorderBrush="#FFECE9F1" BorderThickness="1" CornerRadius="10">
                        <TreeView Style="{DynamicResource TreeViewStyle}" Grid.Row="0" Margin="5" HorizontalContentAlignment="Center" ItemsSource="{Binding SyncFolder}">
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="TreeViewItem.IsExpanded" Value="True" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </TreeView>
                    </Border>
                    <controls:BusyIndicator Grid.Row="0" Style="{DynamicResource NewBusy}" Grid.ColumnSpan="2" IsBusy="{Binding IsBusy}" />
                    <GridSplitter Style="{DynamicResource NewSplitter}" Grid.Row="1" Height="5" Margin="0,5" Width="80" Background="#94BCFF" HorizontalAlignment="Stretch" BorderThickness="0.5" BorderBrush="#94BCFF" />
                    <Grid Row="2" Margin="0,0,0,16">
                        <Border BorderBrush="#FFECE9F1" BorderThickness="1" CornerRadius="10">
                            <ItemsControl Margin="10" Focusable="True" Foreground="#FF333333" FontSize="16" ItemsSource="{Binding Log, Source={x:Static utils:Logger.Instance}}" Loaded="ItemsControl_Loaded">
                                <Control.Template>
                                    <ControlTemplate>
                                        <ScrollViewer CanContentScroll="True">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </Control.Template>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel IsItemsHost="True" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Border>
                        <Button HorizontalAlignment="Right" VerticalAlignment="Top" Width="24.5" Height="26" Margin="5,5,10,5" Style="{StaticResource VS2012WindowStyleTitleBarButton}" WindowChrome.IsHitTestVisibleInChrome="True" Cursor="Hand" IsDefault="True" Command="{Binding ClearLogCommand}">
                            <Grid MaxHeight="13" MaxWidth="13">
                                <Path Stroke="#FF848287" StrokeThickness="1.5" Stretch="UniformToFill" Data="M0,0 L8,8 M0,8 L8,0" />
                            </Grid>
                        </Button>
                    </Grid>
                </Grid>
            </Grid>
            <Grid Name="ProgressPanel" Row="4" Margin="8,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid Column="0" Margin="0,0,5,0">
                    <ProgressBar Background="#ECE9F1" Foreground="#4684EB" Style="{DynamicResource CornerProgressBarStyle}" Maximum="{Binding TotalCount}" Value="{Binding ProgressValue}" BorderBrush="{x:Null}" />
                    <TextBlock HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center" Foreground="#FFFFFFFF" Text="{Binding ProgressProcent}" />
                </Grid>
                <Grid Column="1" Margin="8,0,0,0">
                    <Button Content="Отмена" Width="179" Style="{DynamicResource RegularButton}" Visibility="Hidden" />
                    <Button Content="Criar Path" Width="179" Style="{DynamicResource RegularButton}" Command="{Binding BuildUpdateCommand}" />
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>