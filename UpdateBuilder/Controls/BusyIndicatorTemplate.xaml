<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:UpdateBuilder.Controls">
  <Style x:Key="NewBusy" TargetType="{x:Type local:BusyIndicator}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:BusyIndicator}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="SpinerAnimation" RepeatBehavior="Forever">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="Spiner" />
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Spiner">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                  <EasingDoubleKeyFrame KeyTime="0:0:1" Value="-1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Border Name="ContentBorder" SnapsToDevicePixels="True" Visibility="Hidden" IsHitTestVisible="{TemplateBinding IsBusy}" Background="#00FFFFFF" HorizontalAlignment="{Binding Path=HorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{Binding Path=VerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid IsHitTestVisible="False" Background="{TemplateBinding Background}">
              <DockPanel IsHitTestVisible="False" HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid Height="81" Width="86" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                  <Panel.Background>
                    <ImageBrush ImageSource="/UpdateBuilder/Resource/figura.png" />
                  </Panel.Background>
                  <Rectangle Name="Spiner" RenderTransformOrigin="0.5,0.5" Width="24" Height="28" Margin="29.771,15.979,32.229,37.021">
                    <UIElement.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform ScaleY="1" ScaleX="-1" />
                        <SkewTransform AngleY="0" AngleX="0" />
                        <RotateTransform />
                        <TranslateTransform />
                      </TransformGroup>
                    </UIElement.RenderTransform>
                    <Shape.Fill>
                      <ImageBrush ImageSource="/UpdateBuilder/Resource/tsentr.png" />
                    </Shape.Fill>
                  </Rectangle>
                </Grid>
              </DockPanel>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="local:BusyIndicator.IsBusy" Value="True">
              <TriggerBase.EnterActions>
                <BeginStoryboard Name="SpinerAnimation" Storyboard="{StaticResource SpinerAnimation}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <StopStoryboard BeginStoryboardName="SpinerAnimation" />
              </TriggerBase.ExitActions>
              <Setter TargetName="ContentBorder" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type local:BusyIndicator}" TargetType="{x:Type local:BusyIndicator}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:BusyIndicator}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="SpinerAnimation" RepeatBehavior="Forever">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="Spiner">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0.1" Value="30" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0.2" Value="60" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0.3" Value="90" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0.4" Value="120" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0.5" Value="150" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0.6" Value="180" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0.7" Value="210" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0.8" Value="240" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0.9" Value="270" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:1.0" Value="300" />
                  <DiscreteDoubleKeyFrame KeyTime="0:0:1.1" Value="330" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Border Name="ContentBorder" SnapsToDevicePixels="True" Visibility="Hidden" IsHitTestVisible="{TemplateBinding IsBusy}" Background="#00FFFFFF" HorizontalAlignment="{Binding Path=HorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{Binding Path=VerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid IsHitTestVisible="False" Background="#26000000">
              <DockPanel IsHitTestVisible="False" HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid Height="50" Width="50" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                  <Rectangle Name="Spiner" RenderTransformOrigin="0.5,0.5">
                    <UIElement.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform ScaleY="1" ScaleX="-1" />
                        <SkewTransform AngleY="0" AngleX="0" />
                        <RotateTransform />
                        <TranslateTransform />
                      </TransformGroup>
                    </UIElement.RenderTransform>
                    <Shape.Fill>
                      <ImageBrush ImageSource="/UpdateBuilder/Resource/loading-wheel-trans.png" />
                    </Shape.Fill>
                  </Rectangle>
                </Grid>
              </DockPanel>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="local:BusyIndicator.IsBusy" Value="True">
              <TriggerBase.EnterActions>
                <BeginStoryboard Name="SpinerAnimation" Storyboard="{StaticResource SpinerAnimation}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <StopStoryboard BeginStoryboardName="SpinerAnimation" />
              </TriggerBase.ExitActions>
              <Setter TargetName="ContentBorder" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>